<scxml name="1015_ReactiveFallback" version="1.0" model_src="" initial="wait_for_tick" xmlns="http://www.w3.org/2005/07/scxml">
    <datamodel>
        <!-- TYPE failure_count:int8 -->
        <data id="failure_count" expr="0"/>
        <!-- TYPE child_idx:int8 -->
        <data id="child_idx" expr="0"/>
        <!-- TYPE children_count:int8 -->
        <data id="children_count" expr="2"/>
    </datamodel>
    <state id="wait_for_tick">
        <transition target="error" cond="children_count &lt; 1"/>
        <transition target="tick_children" event="bt_1015_tick">
            <assign location="failure_count" expr="0"/>
            <assign location="child_idx" expr="0"/>
        </transition>
    </state>
    <state id="tick_children">
        <onentry>
            <if cond="child_idx &lt; children_count">
                <if cond="child_idx == 0">
                    <send event="bt_1016_tick" target="1016_ROS2Condition"/>
                    <elseif cond="child_idx == 1"/>
                    <send event="bt_1017_tick" target="1017_ROS2Action"/>
                </if>
            </if>
        </onentry>
        <transition target="wait_for_tick" event="bt_1016_response" cond="(_event.data.status == 3) &amp;&amp; (child_idx == 0)">
            <send event="bt_1015_response" target="1014_ReactiveSequence">
                <param name="status" expr="3"/>
            </send>
        </transition>
        <transition target="wait_for_tick" event="bt_1017_response" cond="(_event.data.status == 3) &amp;&amp; (child_idx == 1)">
            <send event="bt_1015_response" target="1014_ReactiveSequence">
                <param name="status" expr="3"/>
            </send>
        </transition>
        <transition target="tick_children" event="bt_1016_response" cond="(_event.data.status == 2) &amp;&amp; (child_idx == 0)">
            <assign location="failure_count" expr="failure_count + 1"/>
            <assign location="child_idx" expr="child_idx + 1"/>
        </transition>
        <transition target="tick_children" event="bt_1017_response" cond="(_event.data.status == 2) &amp;&amp; (child_idx == 1)">
            <assign location="failure_count" expr="failure_count + 1"/>
            <assign location="child_idx" expr="child_idx + 1"/>
        </transition>
        <transition target="wait_for_tick" event="bt_1016_response" cond="(_event.data.status == 1) &amp;&amp; (child_idx == 0)">
            <send event="bt_1015_response" target="1014_ReactiveSequence">
                <param name="status" expr="1"/>
            </send>
        </transition>
        <transition target="wait_for_tick" event="bt_1017_response" cond="(_event.data.status == 1) &amp;&amp; (child_idx == 1)">
            <send event="bt_1015_response" target="1014_ReactiveSequence">
                <param name="status" expr="1"/>
            </send>
        </transition>
        <transition target="wait_for_tick" cond="failure_count == children_count">
            <send event="bt_1015_response" target="1014_ReactiveSequence">
                <param name="status" expr="2"/>
            </send>
        </transition>
        <transition target="wait_for_tick" cond="child_idx == children_count">
            <send event="bt_1015_response" target="1014_ReactiveSequence">
                <param name="status" expr="3"/>
            </send>
        </transition>
        <transition target="error" cond="child_idx &lt; 0 || child_idx &gt; children_count"/>
    </state>
    <state id="error"/>
</scxml>