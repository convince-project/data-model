// The environment model describes a room with three straight edges and one edge with a small corner in the middle.
// In addition, there are two obstacles placed in the room, a ball, which is movable, and a fixed cube.
// The robot is placed at coordinates (0.5, 0.5) initially, and has a round shape with a radius of 0.3m and a height of 0.2m.
// Lengths are given in meters.
{

    "name": "simple-robot-in-simple-grid",
    "features": ["convince-extensions"],
    "type": "mdp",

   
    // Environment model

    "rob-env-model":
    { 
        "name": "simple-grid",
        "boundaries": [
            {
                "x-coord": 0,
                "y-coord": 2
            },
            {
                "x-coord": 1,
                "y-coord": 2
            },
            {
                "x-coord": 2,
                "y-coord": 1
            },
            {
                "x-coord": 2,
                "y-coord": 0
            },
            {
                "x-coord": 1,
                "y-coord": -1
            },
            {
                "x-coord": 0,
                "y-coord": -1
            },
            {
                "x-coord": -1,
                "y-coord": 0
            },
            {
                "x-coord": -1,
                "y-coord": 1
            }
        ],
        "obstacles": [],
        "robots": [
            {
                "name": "simple-robot",
                "position": {
                    "x-coord": 0,
                    "y-coord": 0
                },
                "direction":  {  // pi/2 rad = 90 degrees from x-axis, i.e., moving direction is up
                "op": "/",
                "left": "π",
                "right": 2.0
                },  
                "shape": {
                    "radius": 0.3,
                    "height": 0.2
                }
            }
        ]
    },


    "actions": [
        {
            "name": "turn-right"    // turn robot direction by 90 degrees to the right
        },
        {
            "name": "go-fwd"  // move one cell forward
        }
    ],

    // Behaviors of ...

    "automata": [

         //... Robot
        {
            "name": "robot-behavior",
            "locations": [
                {
                    "name": "operating"   // the simple robot has only one state
                }
            ],
            "initial-locations":[
                "operating"
            ],
            "edges": [
                {
					"location": "operating",
					"action": "go-fwd",
                    "guard": {
                        "exp": {
                            "op": "not-intersect",
                            "left": "simple-robot",
                            "right": "boundaries",  // check that there are no intersections with any of the boundaries when the robot moves forward. This is one of the CONVINCE feature extensions
                            "speed": 1 // move one cell in each step, i.e., we are on a coordinate system discretized to integers
                        }
                    },
					"destinations": [ {
						"location": "operating",
                        "assignments": [ 
                            {
                                "ref": "robots[0].position.x-coord",
                                "value": {
                                    "op": "+",
                                    "left": "robots[0].position.x-coord",   // change in x-coordinate is cos(dir) * v + [0,0,1] * w
                                    "right": {
                                        "op": "*",
                                        "left": {
                                            "op": "cos",
                                            "exp": "robots[0].direction"
                                        },
                                        "right": 1
                                    }
                                }
                            },
                            {
                                "ref": "robots[0].position.y-coord",
                                "value": {
                                    "op": "+",
                                    "left": "robots[0].position.y-coord",   // change in y-coordinate is sin(dir) * v + [0,0,1] * w
                                    "right": {
                                        "op": "*",
                                        "left": {
                                            "op": "sin",
                                            "exp": "robots[0].direction"
                                        },
                                        "right": 1
                                    }
                                }
                            }
                        ]
                    }]
				},
                {
                    "location": "operating",
                    "action": "turn-right",
                    "guard": {
                        "exp": {
                            "op": "intersect",
                            "left": "simple-robot",
                            "right": "boundaries",  // in case the robot would intersect with one of the boundaries when it moves forward, the robot has to turn to be able to move forward
                            "speed": 1
                        }
                    },
                    "destinations": [ {
                        "location": "operating",
                        "assignments": [ 
                            {
                                "ref": "robots[0].direction",
                                "value": {
                                    "op": "%",
                                    "left":{
                                            "op": "-",
                                            "left": "robots[0].direction",
                                            "right": {
                                                "op": "*",
                                                "left": 0.5,
                                                "right": "π"
                                            }
                                    },   // one step rotates by 90 degrees, i.e., π/2 rad
                                    "right": {
                                            "op": "*",
                                            "left": 2,
                                            "right": "π"
                                    }
                                }
                            }
                        ]
                    }]
                }
            ]
        }
    ],

    "system":  {
        "elements": [
            {
                "automaton": "robot-behavior"
            }
        ],
        "syncs": []
    },

    "properties": [
        //  What is the maximal probability that the robot will eventually reach position (1,1). The correct result is 1, because it turns right in case moving forward is not possible, i.e., it can never get stuck or shuttle back and forth between two cells.
        {
            "name": "goal-reached",
            "expression": {
                "op": "filter",
                "fun": "max",
                "values":{
                    "op": "Pmax",
                    "exp": {
                        "op": "F",
                        "exp": {
                            "op": "∧",
                            "left":{
                                "op": "=",
                                "left": "robots[0].position.x-coord",
                                "right": 1
                            },
                            "right": {
                                "op": "=",
                                "left": "robots[0].position.y-coord",
                                "right": 1
                            } 
                        }
                    }
                }
            }
        }
    ]
}
