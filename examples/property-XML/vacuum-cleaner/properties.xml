<properties>
  <datamodel>
    <data id="level" type="i32">
      <caller refid="BatteryLevel" type="skill" />
      <called refid="BatteryDriverCmp" type="component" />
      <!-- if event="return" value is either "returnValue" or "returnEvent"-->
      <!-- if value is "returnEvent" a Boolean variable is set corresponding to the event (function return)-->
      <!-- if value is "returnValue" the returned value is associated to a variable of a suitable type-->
      <connection function="readLevel" event="return" value="returnValue" />
    </data>
    <data id="alarm" type="bool">
      <caller refid="Alarm" type="skill" />
      <called refid="AlarmCmp" type="component" />
      <!-- if event="call" value is either "callValue" or "callEvent"-->
      <!-- if value is "callEvent" a Boolean variable is set corresponding to the event (function call)-->
      <!-- if value is "callValue" the id value is associated to a struct whose fields correspond to the function parameters -->
      <!-- if value is "callValue.x" the id value is associated to the value of a specific function parameter "x" -->
      <connection function="sendAlarm" event="call" value="callEvent" />
    </data>
  </datamodel>

  <property propid="goal-reached">
    <always>
      <eventually>
        <prop refid="at_goal">
      </eventually>
    </always>
  </property>

  <property propid="dock-fast">
    <always>
      <implies>
        <leq>
          <var name="R_max"/>
          <var name="r"/>
        </leq>
        <eventually within="x">
          <prop refid="docked">
        </eventually>
      </implies>
    </always>
  </property>

  <property propid="arrive-dock">
    <always>
      <until>
        <prop refid="find-dock">
        <prop refid="docked">
      </until>
    </always>
  </property>

  <property propid="shimmy-edges">
    <always>
      <until>
        <prop refid="shimmy">
        <prop refid="bumped">
      </until>
    </always>
  </property>

  <property propid="move-other-side">
    <always>
      <until within="y">
        <prop refid="find-dock">
        <prop refid="go_to_other_side">
      </until>
    </always>
  </property>

</properties>
